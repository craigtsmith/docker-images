name: Dynamic Docker Build and Push

on:
  push:
    branches:
      - main

jobs:
  determine-builds:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-dockerfiles.outputs.matrix }}
      proceed: ${{ steps.find-dockerfiles.outputs.proceed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 10 # Fetch the last 10 commits.

      - name: Find changed directories with Dockerfiles
        id: find-dockerfiles
        run: |
          echo "Changed directories:"
          changed_dirs=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'Dockerfile' | xargs -r -L1 dirname | uniq)
          echo "$changed_dirs"
          if [ -z "$changed_dirs" ]; then
            echo "::set-output name=matrix::{\"include\":[]}"
            echo "::set-output name=proceed::false"
            echo "No changes in Dockerfile directories."
          else
            json_matrix=$(echo "$changed_dirs" | jq -R 'split(" ") | map(select(. != "")) | map({context: .}) | {include: .}' | jq -c .)
            echo "::set-output name=matrix::$json_matrix"
            echo "::set-output name=proceed::true"
            echo "Generated matrix JSON:"
            echo "$json_matrix"
          fi

  build:
    needs: determine-builds
    runs-on: ubuntu-latest
    if: ${{ needs.determine-builds.outputs.proceed == 'true' }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.determine-builds.outputs.matrix)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ matrix.context }}:latest
